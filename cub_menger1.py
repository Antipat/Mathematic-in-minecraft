import mcpi.minecraft as minecraft
craft = minecraft.Minecraft.create()

cor = craft.player.getTilePos()

x=cor.x+1
y=cor.y
z=cor.z

# создаём функцию для построения губки
def menger(a):
    global x,y,z # вызываем глобальные переменные
    d=3**a       # Определяем размер губки
    k=d          # Создаём новую переменную с начальным значением размера губки
    m = d-1      # переменная для точного построения губки в пространстве
    
    h=int(d/3)   # Переменная со значением количесва блоков для первого разбиения на равные фигуры

    
    craft.setBlocks(x,y,z,x+m,y+m, z+m, 35, 2) # построение куба размера d
    print(" x1 " +str(x)+" y1 " +str(y)+" z1 " +str(z)) # вывод координат начала построения
    # Создание конечного цикла связанного сразмерностью губки (итерацией)
    for i in range(a): 
        # если значение переменной k равно значению размера губки, то провести алгоритм первой итерации
        # вместо конкретных чисел указывается текущее значение переменной h 
        if k==d:
            craft.setBlocks(x+h,y+h,z,x+2*h-1,y+2*h-1, z+d, 0)
            craft.setBlocks(x,y+h,z+h,x+d,y+2*h-1, z+2*h-1, 0)
            craft.setBlocks(x+h,y,z+h,x+2*h-1,y+d, z+2*h-1, 0)
        # если значение k < d, следовательно равно h, то запускается алгоритм второй итерации 
        elif k==h:
            # первый цикл отвечает за проход по оси Y по размеру разбитых фигур (h)
            for l in range(a+1):
                # второй цикл вычленяет центр каждой разбитой фигуры вдоль оси X и оси Z
                # центром этих фигур будут количество блоков, записанных в переменную t 
                for j in range(a+1):
                    craft.setBlocks(x+t,y+t,z,x+2*t-1,y+2*t-1, z+d, 0)
                    craft.setBlocks(x+t,y+t,z+t,x+t,y+2*t-1, z+2*h-1, 0)
                    craft.setBlocks(x+t,y+t,z+t,x+2*t-1,y+t, z+2*h-1, 0)
                    print(" x " +str(x)+" y " +str(y)+" z " +str(z))
            
                    for l in range(a+1):
                        craft.setBlocks(x,y+t,z+t,x+d,y+2*t-1, z+t, 0)
                        craft.setBlocks(x+t,y+t,z+h+t,x+t,y+2*t-1, z+h+2*t-1, 0)
                        craft.setBlocks(x+t,y+t,z+h+t,x+2*h-1,y+t, z+h+2*t-1, 0)
                        z=z+h
                        #print(" x " +str(x)+" y " +str(y)+" z " +str(z))
                    # проведя первый шаг цикла, необходимо вернуться в исходную точку по Z
                    # а по оси X сместиться на размер фигуры первого разбиения
                    z=z-3*h
                    x=x+h
                # подняться по оси Y и вернуться в точку с x и z    
                y=y+h
                x=x-3*h
        # после каждого шага первого цикла изменить размер переменных k и t
        k=k/3
        t=h/3
        
menger(2)

